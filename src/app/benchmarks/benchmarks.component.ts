import { Component, OnInit, Pipe } from '@angular/core'

@Component({
  selector: 'app-benchmarks',
  templateUrl: './benchmarks.component.html',
  styleUrls: ['./benchmarks.component.scss']
})
export class BenchmarksComponent implements OnInit {

  benchmarks = [
    { name: 'Angha-Bench',                                        desc: '10K largest function',            body: 'The 10.000 largest compilable C functions extracted from programs, mined from popular github repositories.'                                                                                               , meta: { chartUrlArray: [ 'assets/img/charts/largest10_01_load_store.png', 'assets/img/charts/largest10_02_allinstcnt_bb.png', 'assets/img/charts/largest10_03_varuse_namedvars.png', 'assets/img/charts/largest10_04_edges_bb.png', ],     downloadUrl: 'http://cuda.dcc.ufmg.br/angha/src/suites/angha_kernels_largest_10k.tar.gz',  downloadSize: '17 MB',  gitHubUrl: '',                                      paperUrl: ''                                                               } },
    { name: 'Angha-Bench',                                        desc: '530K function',                   body: 'Several (aprox. 530.000) single function C files extracted from programs, mined from popular github repositories.'                                                                                        , meta: { chartUrlArray: [ 'assets/img/charts/angha530k_01_load_store.png', 'assets/img/charts/angha530k_02_allinstcnt_bb.png', 'assets/img/charts/angha530k_03_varuse_namedvars.png', 'assets/img/charts/angha530k_04_edges_bb.png', ],     downloadUrl: 'http://cuda.dcc.ufmg.br/angha/src/suites/angha_kernels_all_530k.tar.gz',     downloadSize: '464 MB', gitHubUrl: '',                                      paperUrl: ''                                                               } },
    { name: 'Angha-Bench',                                        desc: 'All function',                    body: 'One million single function C files extracted from programs, mined from popular github repositories.'                                                                                                     , meta: { chartUrlArray: [],                                                                                                                                                                                                                 downloadUrl: 'http://cuda.dcc.ufmg.br/angha/src/suites/angha_kernels_all_1million.tar.gz', downloadSize: '241 MB', gitHubUrl: '',                                      paperUrl: ''                                                               } },
    { name: 'Angha-Bench',                                        desc: '15K whole program',               body: 'All the (aprox.) 15.000 reconstructed compilable C programs, mined from popular github repositories.'                                                                                                     , meta: { chartUrlArray: [ 'assets/img/charts/anghawhole_01_load_store.png', 'assets/img/charts/anghawhole_02_allinstcnt_bb.png', 'assets/img/charts/anghawhole_03_varuse_namedvars.png', 'assets/img/charts/anghawhole_04_edges_bb.png', ], downloadUrl: 'http://cuda.dcc.ufmg.br/angha/src/suites/angha_wholefiles_all_15k.tar.gz',   downloadSize: '15 MB',  gitHubUrl: '',                                      paperUrl: ''                                                               } },
    { name: 'LLVM Test-Suite and more',                           desc: 'Aprox. 240 real world program',   body: 'Collection of programs that come with the LLVM Test-Suit with some additions. More details can be found in the original repository.'                                                                      , meta: { chartUrlArray: [ 'assets/img/charts/tf_01_load_store.png', 'assets/img/charts/tf_02_allinstcnt_bb.png', 'assets/img/charts/tf_03_varuse_namedvars.png', 'assets/img/charts/tf_04_edges_bb.png', ],                                 downloadUrl: '',                                                                           downloadSize: '',       gitHubUrl: 'https://github.com/lac-dcc/Benchmarks', paperUrl: ''                                                               } },
    { name: 'Liveness-Driven Random Generated Programs (ldrgen)', desc: '10K largest synthesized program', body: '10K largest programs among the 530.000 generated by ldrgen. The construction is bottom-up, guided by a simultaneous structural data-flow analysis to ensure that the generator never generates dead code.', meta: { chartUrlArray: [ 'assets/img/charts/ldrgen10k_01_load_store.png', 'assets/img/charts/ldrgen10k_02_allinstcnt_bb.png', 'assets/img/charts/ldrgen10k_03_varuse_namedvars.png', 'assets/img/charts/ldrgen10k_04_edges_bb.png', ],     downloadUrl: 'http://cuda.dcc.ufmg.br/angha/src/suites/ldrgen_kernels_largest_10k.tar.gz', downloadSize: '110 MB', gitHubUrl: '',                                      paperUrl: 'https://link.springer.com/chapter/10.1007/978-3-319-94460-9_7'  } },
    { name: 'CSmith',                                             desc: '10K largest synthesized program', body: '10K largest programs among the 530.000 generated by CSmith, a randomized test-case generation tool.'                                                                                                      , meta: { chartUrlArray: [ 'assets/img/charts/csmith10k_01_load_store.png', 'assets/img/charts/csmith10k_02_allinstcnt_bb.png', 'assets/img/charts/csmith10k_03_varuse_namedvars.png', 'assets/img/charts/csmith10k_04_edges_bb.png', ],     downloadUrl: 'http://cuda.dcc.ufmg.br/angha/src/suites/csmith_kernels_largest_10k.tar.gz', downloadSize: '568 MB', gitHubUrl: '',                                      paperUrl: 'https://dl.acm.org/citation.cfm?id=1993532'                     } },
    { name: 'DeepSmith',                                          desc: 'Aprox. 1K program',               body: 'Around 1.000 programs generated by DeepSmith, an approach that uses deep learning techniques.'                                                                                                            , meta: { chartUrlArray: [ 'assets/img/charts/deepsmith_01_load_store.png', 'assets/img/charts/deepsmith_02_allinstcnt_bb.png', 'assets/img/charts/deepsmith_03_varuse_namedvars.png', 'assets/img/charts/deepsmith_04_edges_bb.png', ],     downloadUrl: 'http://cuda.dcc.ufmg.br/angha/src/suites/deepsmith_kernels_all_1k.tar.gz',   downloadSize: '59 KB',  gitHubUrl: '',                                      paperUrl: 'https://dl.acm.org/citation.cfm?id=3213848'                     } },
  ]

  range = (n: number): any => Array.from({length: n}, (value, key) => null)

  chartGridMaker = (meta) => {
    const charts: string = [''].concat(meta.chartUrlArray).reduce((ch, url) =>
          ch + '<img src="' + url + '" alt="" class="chart-img">')
    return `<div class="img-grid">${charts}</div>`
  }

  constructor() {
    console.log(this.benchmarks)
  }

  ngOnInit() {}
}
